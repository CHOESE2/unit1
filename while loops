
color darkB = #669bbc;
color lightB = #a9d6e5;

 void setup(){
   size(800, 800);
   background(255);
    
    fill(255, 0, 0);
     circle(random(500, 600), random(300,400 ),random(2, 8));
 }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
 
 //int q, w;
 // q = 60;
 // w = 72;
 // while(w + q >= 0){
 //   q = q - 10;
 //   w = w -10;
 // fill(255, random(0, 255), random(0, 255));
 // ellipse(277, 184, q, w );
 //}
 //}
 
 

 
    
  //  //centric squares
  //int x, y, d;
  //x = 0;
  //y = 0;
  //d = 800;
  //while(d > 0){
  //  x = x + 20;
  //  y = y + 20;
  //  d = d - 40; // x and y moves quicker than diameter?  so twice their speed 
  //  fill(random(0, 255));
  //  square(x, y, d);
  //}
 
   
 // // centric circles
 // int d;
 ////d = 700;
 ////while( d > 0){
 ////  d = d - 30;
 ////  fill(random(0, 255));
 //// circle(400, 400, d);
 ////}
 
  
  
//int x, y, p;

//y = 0;
//x = 0;
//p = 0;
//while( y < 800){
//  y = y + 20;
//  p = p - 20;
//  line( 0, y, 800, p );
//}
////while(x < 800){
////  x = x - 20;
////  line(x, 800, 0, 0);
////}






//grid
//y = 0;
//x = 0;
//while( y < 800){
//  y = y + 20;
//  line( 0, y, 800, y);
//}
//while(x < 800){
//  x = x + 20;
//  line(x, 0, x, 800);
//}
// }








// diagonal lines? 
//y = 800;
//x = 0;
// while( x < 1600){
// x = x + 20;
// y = y - 20;
// line(0, y, x, 800);
// }
// }
 


//supposedly the opposite diagonal lines

//while(x < 1600){
//x = x + 10;
//y = y + 10;
//line(x, 0, 0, y );
// } 
 
 


 // horizontal lines
//while(y < 800){
// y = y + 20;
// line(0, y, 800, y);
// } 
// }
 

 
////vertical lines accross the screen
//while( x < 800){
//  x = x + 10;
//  line(x, 0, x, 800);
//} if (x > 800){
//  y = y + 10;
// }
// }
