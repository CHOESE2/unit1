//animation


int trainX;
int trainY;
int counter;
int blue1, blue2, blue3, blue4, blue5, blue6;
int cheeseX;
int cheeseY;
int wheel1X;
int wheel1Y;
int angle1;
int wheel2X;
int wheel2Y;
int angle2;



void setup() {
  size(800, 600, P2D);
  trainX = 0;
  counter = 0;
  trainY = 300;
  blue1 = 800;
  blue2 = 600;
  blue3 = 400;
  blue4 = 200;
  blue5 = 0;
  blue6 = 1000;
  cheeseX = 250;
  cheeseY = 75;
  wheel1X = -32;
  wheel1Y = 400;
  angle1 = -0;
  wheel2X = 152;
  wheel2Y = 400;
  angle2 = 0;
  //
 
}

void draw() {
  background(255);
  fill(49,49,49);
  rect(0, 260, 800, 300);


cheese(cheeseX, cheeseY);
cheeseX = cheeseX -2;
if(cheeseX < -800){
  cheeseX = 1000;
}

  
  fill(185, 217, 255);
  ellipse(blue1, 410, 200, 200); //bush
  ellipse(blue2, 410, 200, 200);
  ellipse(blue3, 410, 200, 200);//bush
  ellipse(blue4, 410, 200, 200);
  ellipse(blue5, 410, 200, 200); 
  ellipse(blue6, 410, 200, 200);
  fill(255);//ground
  rect(0, 450, 800, 300);
  fill(152, 152, 152);
  rect(0, 400, 800, 60);//ground end
  
  blue1 = blue1 - 10;
  blue2 = blue2 - 10;
  blue3 = blue3 -10;
  blue4 = blue4 -10;
  blue5 = blue5 -10;
  blue6 = blue6 - 10;
  
   if (blue1 < -200){
     blue1 = 1000;
   }
   if (blue2 < -200){
     blue2 = 1000;
   }
   if (blue3 < -200){
     blue3 = 1000;
   }
   if (blue4 < -200){
     blue4 = 1000;
   }
   if (blue5 < -200){
     blue5 = 1000;
   }
   if (blue6 < -200){
     blue6 = 1000; 
   }
   
   

   wheeluno(wheel1X, wheel1Y, angle1);
   angle1 = angle1 + 10;
   wheel1X = wheel1X + 3;
   if(wheel1X > 1000){
     wheel1X = -280;
   }
   wheeltwo(wheel2X, wheel2Y, angle2);
   angle2 = angle2 + 10;
   wheel2X = wheel2X + 3;
   if(wheel2X > 1000){
     wheel2X = -280;
   }
   

  
  train(trainX, trainY);
  trainX = trainX + 3;
  if (trainX > 1000){
    trainX = -280;
 
 
  //bumps  
    counter = counter + 1;
  if (counter < 50){
      trainY = 300;
  }
  if (counter > 50){
    trainY = 230;
  }
  if (counter == 80)
  trainY = 300;
  }  

}


void train(int x, int y) {
  pushMatrix();
  translate(x, y);
 
  //body
  fill(255, 240, 201);
  triangle(-140, -35, -160, -4, -130, -12); //left side
  triangle(260, -35, 260, -4, 280, -2); //right side
  fill(255, 245, 219);
  rect(-140, -35, 400, 50);//dimention
  fill(33, 49, 9);
  ellipse (-120, 0, 80, 30); //roof
  ellipse(240, 0, 80, 30);

  fill(131, 131, 131);
  rect (-130, -15, 380, 100); //behind base

  fill(255, 245, 219);
  rect(-130, -15, 380, 12); //roof
  fill(49, 34, 10);
  rect(-130, -15, 380, 3);//lines roof
  rect(-130, -3, 380, 3);//lines roof
  fill(57, 39, 11);
  rect(-130, 80, 380, 15); // floor
  fill(33, 22, 5);
  ellipse(-116, 72, 98, 15); //carpet
  ellipse(235, 72, 98, 15);//carpet
  fill(13, 21, 3);
  rect(-140, 0, 30, 64);//back door
  rect(230, 0, 30, 64);//back door

  fill(33, 49, 9);
  rect(-100, 0, 320, 100);//longer base
  rect(-160, 0, 30, 100);//left side train
  rect(-165, 50, 34, 50);//bottom left
  rect(250, 0, 30, 100);//right side train
  rect(251, 50, 34, 50);
  //body section done
  
  
  fill(105, 131, 69);
  rect(0, 0, 120, 95); // square body


  //train windows
  fill(57, 49, 11);
  rect(5, 5, 33, 37); //shadow
  fill(227, 227, 229);
  rect (5, 5, 30, 35) ;

  fill(57, 49, 11);
  rect (42, 5, 38, 42); // shadow
  fill(227, 227, 229);
  rect (42, 5, 35, 40) ;
  fill(57, 49, 11);
  rect (85, 5, 30, 40) ;
  fill(227, 227, 229);
  rect (85, 5, 28, 38); //shadow
  rect (0, 90, 38, 10); //bottom train left
  rect (86, 90, 34, 10); // bottom train left
  //ex l
  fill(57, 49, 11);
  rect(-91, 5, 38, 42);//shadow big window
  fill(227, 227, 229);
  rect(-91, 5, 35, 40);
  fill(57, 49, 11);
  rect(-45, 5, 33, 37);// shadow small window
  fill(227, 227, 229);
  rect(-45, 5, 30, 35);
  //ex r
  fill(57, 49, 11);
  rect(130, 5, 38, 42);//shadow b
  fill(227, 227, 229);
  rect(130, 5, 35, 40);
  fill(57, 49, 11);
  rect(178, 5, 33, 37); //shadow s
  fill(227, 227, 229);
  rect(178, 5, 30, 35);
  //end of windows
  fill(255);

  //details
  fill(255, 245, 219);
  rect (-100, 50, 320, 4); //left Line higher
  rect (-100, 85, 320, 4); //right line higher
  fill(23, 15, 3);
  rect(-145, 106, 410, 4);//wheel connecter
  rect(-152, 100, 10, 16);
  rect(260, 100, 10, 16);

  //little lines on the roof
  fill(72, 60, 32);
  rect(-28, -38, 5, 12);
  rect(-5, -38, 5, 12);
  rect(20, -38, 5, 12);
  rect(45, -38, 5, 12);
  rect(70, -38, 5, 12);
  rect(95, -38, 5, 12);
  rect(120, -38, 5, 12);
  rect(145, -38, 5, 12);
  rect(-32, -39, 198, 6);
  popMatrix();
}

void cheese(int x, int y){
  pushMatrix();
translate( x, y);

fill(255, 233, 155);
rect(600, 100,  100, 200); // 1

fill(255, 222, 103);
ellipse(600, 180, 90, 90);//2
ellipse(660, 250, 40, 40);//3

fill(229, 201, 100);
ellipse(653, 250, 25, 36);//4
ellipse(590, 180, 80, 87); //5

fill(255, 226, 121);
rect(400, 100, 200, 200);//6

fill(255, 222, 103);
ellipse(460, 220, 90, 98); //7

fill(229, 201, 100);
ellipse(470, 220, 69, 92);//8

fill(255, 222, 103);
ellipse(450, 130, 30, 32);//9

fill(229, 201, 100);
ellipse(455, 130, 19, 30);//10

fill(255, 222, 103);
ellipse(550, 180, 50, 50);//11

fill(229, 201, 100);
ellipse(555, 180, 38, 47);//12
popMatrix();
}


void wheeluno(int x, int y, int angle){
  pushMatrix();
  translate(x,y);
  rotate(radians(angle));
  
    fill(51, 51, 51);
    ellipse(0, 0, 57, 57);
      fill(170, 170, 170);//color
    ellipse(0, 0, 47, 47);// inside
     fill(51, 51, 51);
    ellipse(0, 0, 12, 12);////
    rect(0, 0, 25, 1);
    rect(-25, 0, 25, 1); 
    rect(0, 0, 1, 25);
    rect(0, 0, 1, -25);
    
  popMatrix();
}


void wheeltwo(int x, int y, int angle){
  pushMatrix();
  translate(x, y);
  rotate(radians(angle));
  
      fill(51, 51, 51);
    ellipse(0, 0, 57, 57);
      fill(170, 170, 170);
    ellipse(0, 0, 47, 47);// inside
      fill(51, 51, 51);
    ellipse(0, 0, 12, 12); ////
     rect(0, 0, 25, 1);
    rect(-25, 0, 25, 1); 
    rect(0, 0, 1, 25);
    rect(0, 0, 1, -25);
    
    popMatrix();
}
